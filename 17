def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    def func3(arg8, arg9):
        var38 = func4(var7, arg1)
        var39 = var38 + ((((1845802990 + arg9 ^ (var38 + arg9 & var38) & (((974472866 + var7) + arg1 & (1979329065 ^ var7 & (((arg9 ^ 858) - 1857185088 ^ 687121799 & arg2) & 1367251780))) - 409)) & var7) | 2040868104) + var38 + var7)
        var40 = arg9 & var38
        result = arg8 ^ (-146715977 - var40 & var39 | (-942404776 | arg2) & arg8 ^ (arg2 | var40 & -943537699 & var7)) | 708
        return result
    var41 = func3(arg1, var7)
    var42 = -969 & arg1
    var43 = 387 - arg1
    var44 = var7 | arg2
    var45 = var43 & var43 - var7
    var46 = (var45 + arg1 & var44) | var42
    var47 = -85 & arg2
    var48 = (var41 ^ var43) - var43 - var7
    var49 = 1648055662 + ((arg1 - var48) | arg1)
    var50 = var42 | (661 & (var44 - arg1))
    var51 = var44 | arg1
    if arg1 < var47:
        var52 = var48 | var43
    else:
        var52 = (var42 & 682) - var48 & var45
    var53 = (var49 ^ var50 + var49) - -585
    var54 = arg2 & var46 ^ 285
    var55 = var54 | -545 | var41 ^ var51
    var56 = (var53 - var45 ^ var45) - -716
    var57 = var49 & var48 + arg1 | var47
    var58 = (var54 + arg2 + var44) - var48
    result = var49 ^ ((((var51 - var51) ^ var45) ^ var47) ^ ((var58 + var50) ^ var41) + (((var54 ^ var47) ^ var49) & var49))
    return result
def func4(arg10, arg11):
    var35 = func5(arg11, arg10)
    var36 = arg11 + -140
    if var36 < var35:
        var37 = (var35 - (((2128871854 ^ -2101278733) - (659 + 653089963 + ((var36 | var35 + -1717943703 + 1811871127) - arg10 ^ 130 ^ (arg10 | (-1546955328 - var36 - var35)) | arg11 ^ arg11 ^ var35) + var36) + 649) | 52)) | arg11
    else:
        var37 = var35 + 501 | arg10 & arg10 & var35
    result = var36 | -272
    return result
def func5(arg12, arg13):
    var14 = 1142647327 ^ ((684 | 1815042277) ^ arg13)
    var15 = (1423089582 ^ 254 - arg13) - 5412964
    var16 = (arg12 | var14) + arg13 + var15
    var17 = (var14 & 140) - var14 - arg12
    var18 = var14 ^ arg13 & var15
    var19 = (arg13 + var17 & var15) ^ -307877020
    var20 = var16 | arg13 | var16
    var21 = var14 & -402689899
    var22 = ((var15 | var20) - var19) | arg12
    var23 = var22 + var18
    var24 = var16 | var22 & var17
    var25 = (1184346844 + var22) | var21 ^ 486
    var26 = (var20 | var16) & var24 & var20
    var27 = (var15 | var18) & (arg12 & 1131845790)
    var28 = var23 | var20
    var29 = -327 + var28
    var30 = arg12 - var16 + var22 | var16
    var31 = (var30 | var27) | -627873679 - var19
    var32 = var20 + var25
    var33 = (var17 ^ var22 ^ var32) | var31
    var34 = var26 | (var33 & (var14 + var22))
    result = var31 ^ var32 | var28
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [var5 | var5 - var5 for i in range(35)]:
        var5 += (var6 | arg3) ^ arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 59'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
